{"version":3,"file":"finoer-store.umd.min.js","sources":["../../src/database/index.ts","../../src/utils/index.ts","../../src/index.ts"],"sourcesContent":["import { isKeywordInThis, isObject } from \"../utils\";\n\ninterface DataType {\n  [props: string]: any\n}\n\n/**\n * Provide data warehouse for fino framework\n * @param { type }  - this is a backup\n */\nclass Database {\n  // Namespace of module data\n  public namespace: string = '';\n\n  // Database\n  public data: DataType = {};\n\n  // Cache data key that has been set up proxy;\n  private existingProxy: Array<string> = [];\n\n\n  /**\n   * Initialize the namespace of the currently activated project\n   * @param { string } - name namespace\n   */\n  init(spacename: string) {\n    if(!spacename) { throw new Error('请传入命名空间'); return }\n\n    // 重置上一个命名空间的状态\n    // this.reset()\n    this.namespace = spacename\n  }\n\n  /**\n   * set up reactive data\n   * @param { object } - data 用户需要设置的数据\n   * @param { string? } - namespace 命名空间\n   */\n  set(data: DataType, namespace?: string) {\n\n    if(namespace && isKeywordInThis(namespace)) {\n      console.error(`${namespace}是数据仓库的关键字，请更改命名空间`);\n      return\n    }\n\n    if(isObject(data)) {\n      console.error(`设置的数据必须是一个对象`);\n      return\n    }\n\n    const currentSpace: string = namespace || this.namespace;\n\n    let initialData = this.data[currentSpace] || {};\n\n    // 设置数据\n    this.data[currentSpace] = Object.assign(initialData, data, {\n      _spacename: currentSpace\n    })\n\n    // 代理访问链\n    for(let key in data) {\n      this.proxyOfprototype(data, currentSpace, key)\n    }\n\n    // 代理内容\n    this.data[currentSpace] = this.proxyOfcontent\n  }\n\n  /**\n   * Get the data of a module\n   * @param { string } - key 需要获取的数据的key值\n   * @param { string } - namespace 命名空间\n   */\n  get(key?: string, namespace?: string) {\n    // 如果key为空，返回所有数据\n    if(!key && namespace) {\n      return this.data[this.namespace]\n    }\n    // 如果不传第二个参数， 默认获取当前命名空间下面的数据\n    else if(key && !namespace && this.data[this.namespace] && this.data[this.namespace][key] !== undefined) {\n      return this.data[this.namespace][key]\n    }\n    // 如果穿了第二个参数， 那么获取相应命名空间下面的数据\n    else if(namespace && key && this.data[namespace]) {\n      return this.data[namespace][key]\n    }\n  }\n\n  /**\n   * Reset the data under the current namespace\n   */\n  clear() {\n    if(!this.data[this.namespace]) { return }\n\n    const keys = Object.keys(this.data[this.namespace]);\n\n    keys.forEach(key => {\n      if(key === 'spacename') { return }\n\n      delete (this as DataType)[key]\n    })\n\n    this.data[this.namespace] = null\n  }\n\n  /**\n   * Proxy access chain\n   * @param { object } - data 用户需要设置的数据\n   * @param { string } - namespace 命名空间\n   * @param { string } - key 数据的key\n   */\n  proxyOfprototype(data: DataType, namespace: string, key: string) {\n    if(key === '_spacename') { return }\n\n    const _namespace = namespace || this.namespace;\n\n    const sharePropertyDefinition = {\n\n      get: () => {\n        return this.data[_namespace][key]\n      },\n\n      set: (newvalue: unknown) => {\n        this.data[key] = newvalue\n        this.data[_namespace][key] = newvalue\n      },\n\n      enumerable: true,\n      configurable: true,\n    }\n\n    Object.defineProperty(this, key, sharePropertyDefinition)\n  }\n\n  /**\n   * Proxy data content\n   * @param { string } - namespace 命名空间\n   */\n  proxyOfcontent(namespace: string): ProxyConstructor {\n    if(this.existingProxy.includes(namespace)) {\n      return this.data[namespace]\n    }\n\n    let proxy =  new Proxy(this.data[namespace], {\n      get: (target: any, key: string | number | symbol, receiver: any) => {\n\n        const res = Reflect.get(target, key, receiver);\n\n        return res\n      },\n      set: (target: any, key: string | number | symbol, value: any, receiver: any) => {\n        const oldValue = target[key]\n        if(target._spacename !== this.namespace && target._spacename !== 'global') {\n          console.error('不允许修改其他数据仓库的数据');\n          return oldValue\n        }\n        const result = Reflect.set(target, key, value, receiver);\n\n        return result\n      }\n    })\n\n    this.existingProxy.push(namespace)\n\n    return proxy\n  }\n\n\n}\n\n\nexport default Database\n","import Database from \"../database\"\n\n// 判断是否是一个对象\nexport const isObject = (obj: unknown) => typeof(obj) === 'object' && obj !== null\n\nexport function isKeywordInThis(key: string) {\n  const instance = new Database()\n  let keys = Object.keys(instance)\n\n  return keys.includes(key)\n}\n","\nimport Database from './database/index'\nconsole.log('databnase改变了')\nexport default Database\n\n"],"names":["Database","[object Object]","this","spacename","Error","namespace","data","key","instance","Object","keys","includes","isKeywordInThis","console","error","obj","currentSpace","initialData","assign","_spacename","proxyOfprototype","proxyOfcontent","undefined","forEach","_namespace","sharePropertyDefinition","get","set","newvalue","enumerable","configurable","defineProperty","existingProxy","proxy","Proxy","target","receiver","Reflect","value","oldValue","push","log"],"mappings":"8LAUA,MAAMA,EAANC,cAESC,eAAoB,GAGpBA,UAAiB,GAGhBA,mBAA+B,GAOvCD,KAAKE,GACH,IAAIA,EAAa,MAAM,IAAIC,MAAM,WAIjCF,KAAKG,UAAYF,EAQnBF,IAAIK,EAAgBD,GAElB,GAAGA,YCnCyBE,GAC9B,MAAMC,EAAW,IAAIR,EAGrB,OAFWS,OAAOC,KAAKF,GAEXG,SAASJ,GD+BHK,CAAgBP,GAE9B,YADAQ,QAAQC,MAAST,EAAH,qBAIhB,GC1CsD,iBAAjCU,ED0CTT,IC1C8D,OAARS,ED4ChE,YADAF,QAAQC,MAAM,gBC3CI,IAACC,ED+CrB,MAAMC,EAAuBX,GAAaH,KAAKG,UAE/C,IAAIY,EAAcf,KAAKI,KAAKU,IAAiB,GAG7Cd,KAAKI,KAAKU,GAAgBP,OAAOS,OAAOD,EAAaX,EAAM,CACzDa,WAAYH,IAId,IAAI,IAAIT,KAAOD,EACbJ,KAAKkB,iBAAiBd,EAAMU,EAAcT,GAI5CL,KAAKI,KAAKU,GAAgBd,KAAKmB,eAQjCpB,IAAIM,EAAcF,GAEhB,OAAIE,GAAOF,EACFH,KAAKI,KAAKJ,KAAKG,WAGhBE,IAAQF,GAAaH,KAAKI,KAAKJ,KAAKG,iBAAiDiB,IAAnCpB,KAAKI,KAAKJ,KAAKG,WAAWE,GAC3EL,KAAKI,KAAKJ,KAAKG,WAAWE,GAG3BF,GAAaE,GAAOL,KAAKI,KAAKD,GAC7BH,KAAKI,KAAKD,GAAWE,QADzB,EAQPN,QACE,IAAIC,KAAKI,KAAKJ,KAAKG,WAAc,OAEpBI,OAAOC,KAAKR,KAAKI,KAAKJ,KAAKG,YAEnCkB,QAAQhB,IACA,cAARA,UAEKL,KAAkBK,KAG5BL,KAAKI,KAAKJ,KAAKG,WAAa,KAS9BJ,iBAAiBK,EAAgBD,EAAmBE,GAClD,GAAW,eAARA,EAAwB,OAE3B,MAAMiB,EAAanB,GAAaH,KAAKG,UAE/BoB,EAA0B,CAE9BC,IAAK,IACIxB,KAAKI,KAAKkB,GAAYjB,GAG/BoB,IAAMC,IACJ1B,KAAKI,KAAKC,GAAOqB,EACjB1B,KAAKI,KAAKkB,GAAYjB,GAAOqB,GAG/BC,YAAY,EACZC,cAAc,GAGhBrB,OAAOsB,eAAe7B,KAAMK,EAAKkB,GAOnCxB,eAAeI,GACb,GAAGH,KAAK8B,cAAcrB,SAASN,GAC7B,OAAOH,KAAKI,KAAKD,GAGnB,IAAI4B,EAAS,IAAIC,MAAMhC,KAAKI,KAAKD,GAAY,CAC3CqB,IAAK,CAACS,EAAa5B,EAA+B6B,IAEpCC,QAAQX,IAAIS,EAAQ5B,EAAK6B,GAIvCT,IAAK,CAACQ,EAAa5B,EAA+B+B,EAAYF,KAC5D,MAAMG,EAAWJ,EAAO5B,GACxB,GAAG4B,EAAOhB,aAAejB,KAAKG,WAAmC,WAAtB8B,EAAOhB,WAEhD,OADAN,QAAQC,MAAM,kBACPyB,EAIT,OAFeF,QAAQV,IAAIQ,EAAQ5B,EAAK+B,EAAOF,MAQnD,OAFAlC,KAAK8B,cAAcQ,KAAKnC,GAEjB4B,UElKXpB,QAAQ4B,IAAI"}