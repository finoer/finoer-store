{"version":3,"file":"finoer-store.umd.min.js","sources":["../../src/database/index.ts","../../src/utils/index.ts","../../src/index.ts"],"sourcesContent":["import { isKeywordInThis, isObject } from \"../utils\";\n\ninterface DataType {\n  [props: string]: any\n}\n\n/**\n * Provide data warehouse for fino framework\n * @param { type }  - this is a backup\n */\nclass Database {\n  // Namespace of module data\n  public namespace: string = '';\n\n  // Database\n  public data: DataType = {};\n\n  // Cache data key that has been set up proxy;\n  public existingProxy: Array<string> = [];\n\n\n  /**\n   * Initialize the namespace of the currently activated project\n   * @param { string } - name namespace\n   */\n  init(spacename: string) {\n    if(!spacename) { throw new Error('请传入命名空间'); return }\n\n    // 重置上一个命名空间的状态\n    // this.reset()\n    this.namespace = spacename\n\n\n    // 从缓存中恢复数据\n    if(!this.data[spacename]) {\n      const dataString = window.localStorage.getItem(`finoData_${spacename}`)\n\n      const data = dataString && JSON.parse(dataString);\n\n      this.set(data, spacename)\n    }\n\n    if(!this.data.global) {\n      const dataString = window.localStorage.getItem(`finoData_global`)\n\n      const data = dataString && JSON.parse(dataString);\n\n      this.set({ ...data }, 'global')\n    }\n  }\n\n  /**\n   * set up reactive data\n   * @param { object } - data 用户需要设置的数据\n   * @param { string? } - namespace 命名空间\n   */\n  set(data: DataType, namespace?: string) {\n\n    if(namespace && isKeywordInThis(namespace)) {\n      console.error(`${namespace}是数据仓库的关键字，请更改命名空间`);\n      return\n    }\n\n    if(!isObject(data)) {\n      console.error(`设置的数据必须是一个对象`);\n      return\n    }\n\n    const currentSpace: string = namespace || this.namespace;\n\n    let initialData = this.data[currentSpace] || {};\n\n    // 设置数据\n    this.data[currentSpace] = Object.assign(initialData, data, {\n      _spacename: currentSpace\n    })\n\n    // 代理访问链\n    for(let key in data) {\n      this.proxyOfprototype(data, currentSpace, key)\n    }\n\n    // 代理内容\n    this.data[currentSpace] = this.proxyOfcontent(currentSpace);\n\n    this.synchronizeDataInCache(currentSpace)\n\n\n  }\n\n  /**\n   * Get the data of a module\n   * @param { string } - key 需要获取的数据的key值\n   * @param { string } - namespace 命名空间\n   */\n  get(key?: string, namespace?: string) {\n    // 如果key为空，返回所有数据\n    if(!key && namespace) {\n      return this.data[this.namespace]\n    }\n    // 如果不传第二个参数， 默认获取当前命名空间下面的数据\n    else if(key && !namespace && this.data[this.namespace] && this.data[this.namespace][key] !== undefined) {\n      return this.data[this.namespace][key]\n    }\n    // 如果穿了第二个参数， 那么获取相应命名空间下面的数据\n    else if(namespace && key && this.data[namespace]) {\n      return this.data[namespace][key]\n    }\n  }\n\n  /**\n   * Reset the data under the current namespace\n   */\n  clear() {\n    if(!this.data[this.namespace]) { return }\n\n    const keys = Object.keys(this.data[this.namespace]);\n\n    keys.forEach(key => {\n      if(key === 'spacename') { return }\n\n      delete (this as DataType)[key]\n    })\n\n    this.data[this.namespace] = null\n  }\n\n  /**\n   * Proxy access chain\n   * @param { object } - data 用户需要设置的数据\n   * @param { string } - namespace 命名空间\n   * @param { string } - key 数据的key\n   */\n  proxyOfprototype(data: DataType, namespace: string, key: string) {\n    if(key === '_spacename') { return }\n\n    const _namespace = namespace || this.namespace;\n\n    const sharePropertyDefinition = {\n\n      get: () => {\n        return this.data[_namespace][key]\n      },\n\n      set: (newvalue: unknown) => {\n        this.data[key] = newvalue\n        this.data[_namespace][key] = newvalue\n      },\n\n      enumerable: true,\n      configurable: true,\n    }\n\n    Object.defineProperty(this, key, sharePropertyDefinition)\n  }\n\n  /**\n   * Proxy data content\n   * @param { string } - namespace 命名空间\n   */\n  proxyOfcontent(namespace: string): ProxyConstructor {\n    if(this.existingProxy.includes(namespace)) {\n      return this.data[namespace]\n    }\n\n    let proxy =  this.setProxy(this.data[namespace])\n\n    this.synchronizeDataInCache(namespace)\n\n\n    this.existingProxy.push(namespace)\n\n    return proxy\n  }\n\n  /**\n   * set data into cache - 将数据设置到缓存中， 一个是global的命名\b空间，一个是当前的命名空间\n   * @param { string } - namespace 命名空间\n   */\n  synchronizeDataInCache(namespace: string) {\n    const spaceData = this.data[namespace];\n\n    const globalData = this.data.global;\n\n    window.localStorage.setItem(`finoData_${namespace}`, JSON.stringify(spaceData))\n    window.localStorage.setItem(`finoData_global`, JSON.stringify(globalData));\n\n    // todo 后面会替换成npm包， 临时方案， 调用w\n    (window as any).$event && (window as any).$event.notify('dataChange')\n  }\n\n  setProxy(data: unknown) {\n    let proxy: ProxyConstructor = new Proxy(data, {\n      get: (target: any, key: string | number | symbol, receiver: any) => {\n\n        const res = Reflect.get(target, key, receiver);\n\n        return res\n      },\n      set: (target: any, key: string | number | symbol, value: any, receiver: any) => {\n        const oldValue = target[key]\n        if(target._spacename !== this.namespace && target._spacename !== 'global') {\n          console.error('不允许修改其他数据仓库的数据');\n          return oldValue\n        }\n        const result = Reflect.set(target, key, value, receiver);\n\n\n        return result\n      }\n    })\n\n    return proxy\n  }\n}\n\n\nexport default Database\n","import Database from \"../database\"\n\n// 判断是否是一个对象\nexport const isObject = (obj: unknown) => typeof(obj) === 'object' && obj !== null\n\nexport function isKeywordInThis(key: string) {\n  const instance = new Database()\n  let keys = Object.keys(instance)\n\n  return keys.includes(key)\n}\n","\nimport Database from './database/index'\nconsole.log('databnase改变了最终版9')\nexport default Database\n\n"],"names":["Database","[object Object]","this","spacename","Error","namespace","data","dataString","window","localStorage","getItem","JSON","parse","set","global","key","instance","Object","keys","includes","isKeywordInThis","console","error","obj","currentSpace","initialData","assign","_spacename","proxyOfprototype","proxyOfcontent","synchronizeDataInCache","undefined","forEach","_namespace","sharePropertyDefinition","get","newvalue","enumerable","configurable","defineProperty","existingProxy","proxy","setProxy","push","spaceData","globalData","setItem","stringify","$event","notify","Proxy","target","receiver","Reflect","value","oldValue","log"],"mappings":"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"}